version: '3'

services:

    redis:
        container_name: redis
        hostname: redis
        image: 'redis:7.0.5'
        command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
        ports:
            - '${REDIS_PORT}:${REDIS_PORT}'
        env_file:
            - ./.env.dev
        volumes:
            - 'redis_data:/data'
        restart: always
        networks:
            - text_analyzer_network
        logging:
            driver: none

    mysql:
        container_name: mysql
        image: mysql:8
        cap_add:
            - SYS_NICE
        env_file:
            - ./.env.dev
        ports:
            - "${DATABASE_PORT}:${DATABASE_PORT}"
        volumes:
            - mysql_data:/var/lib/mysql
        restart: always
        command: --mysql-native-password=ON --skip-log-bin=1 --disable-log-bin=1
        networks:
            - text_analyzer_network
        environment:
            MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
            MYSQL_DATABASE: ${DATABASE_NAME}
            MYSQL_USER: ${DATABASE_USERNAME}
            MYSQL_PASSWORD: ${DATABASE_PASSWORD}

    phpmyadmin:
        container_name: phpmyadmin
        image: phpmyadmin/phpmyadmin:latest
        env_file:
            - ./.env.dev
        depends_on:
            - mysql
        ports:
            - "8080:80"
        networks:
            - text_analyzer_network
        environment:
            MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
            PMA_HOST: ${DATABASE_HOST}
            UPLOAD_LIMIT: 3000M
        logging:
            driver: none

    text_analyzer_api:
        image: text_analyzer_api
        env_file:
            - ./.env.dev
        depends_on:
            - mysql
            - redis
        build:
            context: .
            dockerfile: ./dockerfiles/dev/Dockerfile
        command: /start
        ports:
            - "${APP_PORT}:${APP_PORT}"
        logging:
            driver: "json-file"
            options:
                max-size: "100m"
                max-file: "20"
        networks:
            - text_analyzer_network
        volumes:
            - .:/app
            - /app/node_modules
        restart: always

networks:
    text_analyzer_network:

volumes:
    mysql_data:
    redis_data:
    